/*
 *
 *  Copyright 2013 Alan Race
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
 */
/*
 * OBO.h
 *
 *  Created on: 31 Oct 2012
 *      Author: alan
 */

#ifndef OBO_H_
#define OBO_H_

#include <string>
#include <vector>

#include <map>

#include <exception>

#include <boost/shared_ptr.hpp>
//#include <boost/unordered_map.hpp>

#include "OBOTerm.h"

namespace ImzML {

    class OBOFileNotFound : public std::exception {
    private:
        std::string filename;

    public:
        OBOFileNotFound(std::string filename) throw() {
            this->filename = filename;
        }
        ~OBOFileNotFound() throw() {
        }

        virtual const char* what() const throw() {
            return filename.c_str();
        }
    };

	class OBO {
	private:
        typedef std::vector< boost::shared_ptr<OBO> > imports_type;

		std::string formatVersion;
		std::string data;
		std::string savedBy;
		std::string autogeneratedBy;
		std::string defaultNamespace;

		// Taken from the id, before the ':' e.g. IMS, MS, UO, PATO for faster matching of terms
		std::string ns;

        imports_type imports;
		std::vector<std::string> remarks;

		std::map<int , boost::shared_ptr<ImzML::OBOTerm> > terms;

	public:
		OBO();
		OBO(std::string filename);
		virtual ~OBO();

		void parse(std::string filename);

		boost::shared_ptr<ImzML::OBOTerm> getTerm(std::string id);
		boost::shared_ptr<ImzML::OBOTerm> getTerm(std::string ns, int id);

//		float load_factor() { return terms.load_factor(); }

	private:
		void cleanup();
	};

} /* namespace ImzML */
#endif /* OBO_H_ */
